robopi:
  diff_drive_controller:
     type: "diff_drive_controller/DiffDriveController"
     publish_rate: 50

     left_wheel: ['left_front_wheel_joint','left_back_wheel_joint']
     right_wheel: ['right_front_wheel_joint','right_back_wheel_joint']

     wheel_separation: 0.22
     wheel_radius: 0.055
     # Odometry covariances for the encoder output of the robot. These values should
     # be tuned to your robot's sample odometry data, but these values are a good place
     # to start
     pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
     twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

     # Top level frame (link) of the robot description
     base_frame_id: chassis
 
     # Velocity and acceleration limits for the robot
     linear:
       x:
         has_velocity_limits    : true
         max_velocity           : 1  # m/s
         has_acceleration_limits: true
         max_acceleration       : 3   # m/s^2
     angular:
       z:
         has_velocity_limits    : true
         max_velocity           : 1   # rad/s
         has_acceleration_limits: true
         max_acceleration       : 3   # rad/s^2

  joint_state_controller:
    type: "joint_state_controller/JointStateController"
    publish_rate: 50

  actuator_interface:
    loop_hz: 50 # hz
    interface_type: "velocity"
    wheels:
      - left_front_wheel_joint
      - left_back_wheel_joint
      - right_front_wheel_joint
      - right_back_wheel_joint
  gpio_wheels:
    #from gpio wiring
    left_front_wheel_joint:
      en: 21
      inF: 20
      inB: 16
    left_back_wheel_joint:
      en: 21
      inF: 20
      inB: 16
    right_front_wheel_joint:
      en: 13
      inF: 19
      inB: 26
    right_back_wheel_joint:
      en: 13
      inF: 19
      inB: 26